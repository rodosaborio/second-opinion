[project]
name = "second-opinion"
version = "0.1.0"
description = "AI tool for getting second opinions and optimizing model usage via MCP"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastmcp>=0.1.0",
    "pydantic>=2.0.0",
    "httpx>=0.25.0",
    "python-dotenv>=1.0.0",
    "cryptography>=41.0.0",
    "pyyaml>=6.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "pydantic-settings>=2.9.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-timeout>=2.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
second-opinion = "second_opinion.cli.main:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
# Reduced addopts for faster development testing
addopts = [
    "--strict-markers",
    "--strict-config",
    "--timeout=60",  # Global timeout to prevent hanging tests
    "--tb=short",    # Shorter tracebacks for faster feedback
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "security: marks tests as security-focused tests",
    "network: marks tests that require network access",
    "timeout: custom timeout marker for specific tests",
]
# Test timeout configuration
timeout = 60
timeout_method = "thread"
# Async test configuration  
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "S",  # flake8-bandit (security)
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "S101",  # use of assert
]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["S101", "S106", "S107"]  # Allow assert and hardcoded passwords in tests

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
strict_concatenate = true

[dependency-groups]
dev = [
    "black>=25.1.0",
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "pytest-timeout>=2.1.0",
    "ruff>=0.12.0",
]

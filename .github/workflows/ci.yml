name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --dev

    - name: Run linting with ruff
      run: uv run ruff check .

    - name: Run formatting check with black
      run: uv run black --check .

    - name: Run type checking with ty
      run: uvx ty check src/

    - name: Run tests with coverage
      run: |
        uv run python -m coverage run -m pytest
        uv run python -m coverage report --fail-under=80
        uv run python -m coverage xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync --dev

    - name: Run security tests
      run: uv run pytest -m security

    - name: Run security audit with ruff
      run: uv run ruff check . --select S

    - name: Check for hardcoded secrets
      run: |
        # Check for actual hardcoded secrets, not legitimate API key handling code
        # Look for API keys with actual values, not parameter names or variable assignments
        if grep -r "sk-[a-zA-Z0-9]\{20,\}" src/ --exclude-dir=.git --exclude-dir=__pycache__ \
           | grep -v "sanitization.py" \
           | grep -v "docstring\|>>>\|example\|Example\|startswith.*sk-\|should start with.*sk-" \
           | grep -v "# .*style\|\" # .*style" \
           | grep -v "re\.match.*sk-\|task-based\|r\".*sk-" || \
           grep -r "api[_-]key.*=.*['\"]sk-[a-zA-Z0-9]\{10,\}['\"]" src/ --exclude-dir=.git --exclude-dir=__pycache__; then
          echo "❌ Potential hardcoded secrets found!"
          exit 1
        else
          echo "✅ No hardcoded secrets detected"
        fi

  integration:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync --dev

    - name: Run integration tests
      run: uv run pytest -m integration

    - name: Test CLI installation
      run: |
        uv run second-opinion --help
        echo "✅ CLI installation successful"

    - name: Test MCP server startup
      run: |
        # Test that MCP server can start without errors
        timeout 10s uv run python -m second_opinion.mcp.server --dev || true
        echo "✅ MCP server startup test completed"